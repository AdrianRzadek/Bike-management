// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjP;

#nullable disable

namespace ProjP.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220611203132_Wypozyczalnia2")]
    partial class Wypozyczalnia2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("KlientWypożyczenie", b =>
                {
                    b.Property<int>("KlienciId")
                        .HasColumnType("int");

                    b.Property<int>("WypożyczeniaId")
                        .HasColumnType("int");

                    b.HasKey("KlienciId", "WypożyczeniaId");

                    b.HasIndex("WypożyczeniaId");

                    b.ToTable("KlientWypożyczenie");
                });

            modelBuilder.Entity("ProjP.Data.Faktura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DataWystawienia")
                        .HasColumnType("datetime2");

                    b.Property<string>("NIP")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.ToTable("Faktura");
                });

            modelBuilder.Entity("ProjP.Data.Klient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Imię")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("NrTelefon")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("nvarchar(24)");

                    b.Property<string>("Pesel")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.HasKey("Id");

                    b.ToTable("Klient");
                });

            modelBuilder.Entity("ProjP.Data.Pracownik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ImięPracownik")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("NazwiskoPracownik")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("NrTelefonu")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("nvarchar(24)");

                    b.Property<string>("Pesel")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Stanowisko")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.ToTable("Pracownik");
                });

            modelBuilder.Entity("ProjP.Data.Rower", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Biegi")
                        .HasColumnType("int");

                    b.Property<string>("Kolor")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("RowerType")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<float>("RozmiarOpon")
                        .HasColumnType("real");

                    b.Property<float>("RozmiarRamy")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Rower");
                });

            modelBuilder.Entity("ProjP.Data.Wypożyczenie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Cena")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DataOddania")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataWypożyczenia")
                        .HasColumnType("datetime2");

                    b.Property<int>("FakturaId")
                        .HasColumnType("int");

                    b.Property<int>("PracownikId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FakturaId");

                    b.HasIndex("PracownikId");

                    b.ToTable("Wypożyczenie");
                });

            modelBuilder.Entity("RowerWypożyczenie", b =>
                {
                    b.Property<int>("RoweryId")
                        .HasColumnType("int");

                    b.Property<int>("WypożyczeniaId")
                        .HasColumnType("int");

                    b.HasKey("RoweryId", "WypożyczeniaId");

                    b.HasIndex("WypożyczeniaId");

                    b.ToTable("RowerWypożyczenie");
                });

            modelBuilder.Entity("KlientWypożyczenie", b =>
                {
                    b.HasOne("ProjP.Data.Klient", null)
                        .WithMany()
                        .HasForeignKey("KlienciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjP.Data.Wypożyczenie", null)
                        .WithMany()
                        .HasForeignKey("WypożyczeniaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjP.Data.Wypożyczenie", b =>
                {
                    b.HasOne("ProjP.Data.Faktura", "Faktura")
                        .WithMany()
                        .HasForeignKey("FakturaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjP.Data.Pracownik", "Pracownik")
                        .WithMany()
                        .HasForeignKey("PracownikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Faktura");

                    b.Navigation("Pracownik");
                });

            modelBuilder.Entity("RowerWypożyczenie", b =>
                {
                    b.HasOne("ProjP.Data.Rower", null)
                        .WithMany()
                        .HasForeignKey("RoweryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjP.Data.Wypożyczenie", null)
                        .WithMany()
                        .HasForeignKey("WypożyczeniaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
